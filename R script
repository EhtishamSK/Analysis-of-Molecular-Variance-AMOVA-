# Set working directory to the project folder
setwd("C:/Users/ehtis/OneDrive - New Mexico State University/SUNNY/Research Projects/Fruit Morphology Projects/GWAS/amova")

# Install and load required packages for genetic analysis
install.packages(c("adegenet", "poppr", "ape")) 
library(adegenet)
library(poppr)
library(ape)

# Import SNP Data: Load SNP data from a STRUCTURE file into a genind object
snp_data <- import2genind("GWAS128.str",
                          onerowperind = FALSE,
                          n.ind = 128,          # number of individuals
                          n.loc = 40709,         # number of loci
                          col.lab = 1,         # column with individual names
                          ask = FALSE)

# Extract and display SNP individual IDs: Check the IDs from the SNP data
snp_ids <- indNames(snp_data)
print(snp_ids)
cat("Number of individuals in snp_data:", length(snp_ids), "\n")

# Import hierarchy: Load population assignments from a CSV file
hierarchy <- read.csv("population.csv", header = TRUE, sep=",")
hierarchy_ids <- hierarchy[[1]]  # First column of hierarchy data frame
cat("Number of individuals in hierarchy:", length(hierarchy_ids), "\n")
print(hierarchy_ids)

# Check for matches: Ensure the number and exact IDs match between SNP data and hierarchy
# Convert to character vectors to ensure consistent comparison
snp_ids <- as.character(snp_ids)
hierarchy_ids <- as.character(hierarchy_ids)

# Check if IDs match
if (length(snp_ids) != length(hierarchy_ids)) {
  stop("Error: The number of individuals in snp_data (", length(snp_ids), 
       ") does not match the number of rows in hierarchy (", length(hierarchy_ids), ").")
}

# Compare IDs for exact match
mismatch <- !all(hierarchy_ids %in% snp_ids) | !all(snp_ids %in% hierarchy_ids)
if (mismatch) {
  # Find IDs in hierarchy that don't match snp_data
  missing_in_snp <- hierarchy_ids[!hierarchy_ids %in% snp_ids]
  missing_in_hierarchy <- snp_ids[!snp_ids %in% hierarchy_ids]
  
  if (length(missing_in_snp) > 0) {
    cat("Error: The following IDs in hierarchy are not in snp_data:\n")
    print(missing_in_snp)
  }
  if (length(missing_in_hierarchy) > 0) {
    cat("Error: The following IDs in snp_data are not in hierarchy:\n")
    print(missing_in_hierarchy)
  }
  stop("ID mismatch detected. Please fix the IDs before proceeding.")
} else {
  cat("All individual IDs match between snp_data and hierarchy.\n")
}

# Convert to genclone Object: Convert genind object to genclone for population analysis
snp_clone <- as.genclone(snp_data)

# Assign strata: Set population structure from hierarchy to the genclone object
strata(snp_clone) <- hierarchy
snp_strat <- snp_clone
cat("Strata successfully set.\n")

# Display hierarchy column names: Check the column names in the hierarchy data
print(colnames(hierarchy))

# Run AMOVA: Perform analysis of molecular variance using population data
amova_res <- poppr.amova(snp_strat, ~ pop, cutoff = 0.3)
print(amova_res)

# Test for significance
amova_test <- randtest(amova_res) 
plot(amova_test)
png(filename = "amova_significance_plot.png", width = 800, height = 600)  # Open PNG device
plot(amova_test)  # Generate the plot
dev.off()  # Close the PNG device

# Use the $results component which contains Df, Sum Sq, and Mean Sq
amova_df <- as.data.frame(amova_res$results)
write.csv(amova_df, file = "amova_results.csv", row.names = TRUE)
# save co variance component 
amova_covar_components <- as.data.frame(amova_res$componentsofcovariance)
write.csv(amova_covar_components, file = "amova_covar_components.csv", row.names = TRUE)

amova_statphi <- as.data.frame(amova_res$statphi)
write.csv(amova_statphi, file = "amova_statphi.csv", row.names = TRUE)

